# -*- coding: utf-8 -*-
"""AI_Crypto

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1FRwWxdtnE4OwByKZMDXRgerKuXo18lzU

# Data Preprocessing

## Importing the libraries
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
import kagglehub

"""## Importing the dataset"""

dataset_path = kagglehub.dataset_download("thedevastator/crypto-trading-and-technical-indicators")
dataset = f"{dataset_path}/11_04_2022_cryptos.csv"

selected_columns = [
    'Volatility',
    'RSI14',
    'MACD Level',
    'MACD Signal',
    'ATR',
    'ADX',
    'MOM',
    'Stoch %K',
    'Stoch %D',
    'AO',
    'CCI20',
    '1W CHG %',
    '1M CHG %'
]

df = pd.read_csv(dataset, usecols=selected_columns)

for col in ['1W CHG %', '1M CHG %']:
    df[col] = df[col].astype(str).str.replace('âˆ’', '-', regex=False)
    df[col] = df[col].str.rstrip('%')
    df[col] = pd.to_numeric(df[col], errors='coerce') / 100

for col in selected_columns:
    df[col] = df[col].astype(str).str.extract(r"([-+]?[0-9]*\.?[0-9]+)").astype(float)

future_window = 6
df_full = pd.read_csv(dataset)
df['future_price'] = df_full['Last_x'].shift(-future_window)
df['price_change_pct'] = (df['future_price'] - df_full['Last_x']) / df_full['Last_x']
df.dropna(inplace=True)

df['target'] = (df['price_change_pct'] > 0).astype(int)

X = df[selected_columns].values
y = df['target'].values

"""## Splitting the dataset into the Training set and Test set"""

from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0)

scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

"""# AI Create

## Training model
"""

from sklearn.linear_model import LogisticRegression

model = LogisticRegression()
model.fit(X_train, y_train)

"""## Predict the test Resuly"""

train_proba = model.predict_proba(X_train)
test_proba  = model.predict_proba(X_test)

"""## Visualising the Training set results"""

train_df = pd.DataFrame({
    "Chance Up (%)":   (train_proba[:, 1] * 100).round(2),
    "Chance Down (%)": (train_proba[:, 0] * 100).round(2)
})

print("=== Training set probabilities ===")
print(train_df.to_string(index=False))

"""## Visualising the Test set results"""

test_df = pd.DataFrame({
    "Chance Up (%)":   (test_proba[:, 1] * 100).round(2),
    "Chance Down (%)": (test_proba[:, 0] * 100).round(2)
})

print("\n=== Test set probabilities ===")
print(test_df.to_string(index=False))

"""# Upload real data

## Upload and read JSON Data
"""

import json
from google.colab import files

uploaded = files.upload()

for filename in uploaded:
    with open(filename, 'r') as f:
        real_json_data = json.load(f)

real_df = pd.DataFrame(real_json_data)